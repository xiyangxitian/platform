<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 扫描service包下所有使用注解的类型 -->
    <context:component-scan base-package="com.ssm.user.service"></context:component-scan>

    <!-- 1.1 关联jdbc.properties -->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

    <!-- 01.配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"></property>
        <property name="minPoolSize" value="${c3p0.minPoolSize}"></property>
        <property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}"></property>
        <property name="checkoutTimeout" value="${c3p0.checkoutTimeout}"></property>
        <property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"></property>
    </bean>


    <!-- 02.配置SessionFactory -->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 扫描model包 使用别名 -->
        <property name="typeAliasesPackage" value="com.ssm.user.entity"></property>
        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
        <!--<property name="mapperLocations" value="classpath:com/ssm/user/entity/*Mapper.xml"></property>-->
        <!--<property name="configLocation" value="classpath:mybatis-config.xml"></property>-->
    </bean>

    <!-- 配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
    <!-- mybatis自动扫描sql映射文件  -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- sessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"></property>
        <!-- 给出需要扫描配置文件接口包 -->
        <property name="basePackage" value="com.ssm.user.dao"></property>
    </bean>

    <!-- 03.生成dao代理對象 -->
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
    <!--<property name="sqlSessionFactoryBeanName" value="sessionFactory"></property>-->
    <!--<property name="basePackage" value="cn.jpp.dao"></property>-->
    <!--</bean>-->
    <!--04.配置service-->
    <!--<bean id="userService" class="cn.jpp.service.UserInfoServiceImpl">-->
    <!--<property name="dao" ref="IUserInfoDao"></property>-->
    <!--</bean>-->

    <!-- 05.配置action -->
    <!--<bean id="/userAction.do" class="cn.jpp.controller.UserInfoController">-->
    <!--<property name="service" ref="userService"></property>-->
    <!--</bean>-->

    <!-- 06.配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 配置基于注解的声明式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>
    <context:annotation-config></context:annotation-config>

    <!-- 07.配置开启事务操作 -->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--&lt;!&ndash;指定在连接方法上应用的事务属性 &ndash;&gt;-->
    <!--<tx:attributes>-->
    <!--<tx:method name="add*" isolation="DEFAULT" propagation="REQUIRED"/>-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!-- aop配置 -->
    <!--<aop:config>-->
    <!--<aop:pointcut id="stockPointcut" expression="execution(* *..service.*.*(..))"></aop:pointcut>-->
    <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="stockPointcut"></aop:advisor>-->
    <!--</aop:config>-->


</beans>